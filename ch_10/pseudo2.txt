2546


6 ones
4 tens 
5 hundreds
2 thousands 



2324


4 ONES 
2 TENS 
3 HUNDREDS 
2 THOUSANDS 

MMCCCIV


MMCCCXXIV

start count at 1 
//search for repeating symbols





I
X
C
M

for(int i{}; i < size of target string; ++i){

 for(int j = i+1; j< size of target string; ++j ){
		if j is equal to i {
		 if j is invalid (not I,X,C,OR M){
		  -error
		}	
		   ++count
			if count is 4
			- error
		}
		
		else
		reset count 
		break
	}		


}


VLD CANNOT REPEAT

VXIVVVV

viii

//return appropriate int for series of roman characters 
Expression :
symbol
expression == next symbol (+)
expression < next symbol  (-)
expression > next symbol  (+)

symbol:
roman numeral

roman numeral:
<character , int pair> 


CCXCIX




	XVI
	for (int i = toks.size(); i > 0; --i) {
	   compare toks i int part to the next toks int part 
	     if the back is less than the next 
	     -sum the values and assign them to result 

	      else if the back is greater than the next 
	       - subtract the next from current and assign the value to result  	   

	}

tok is holding the complete expression
